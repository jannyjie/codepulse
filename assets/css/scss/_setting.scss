// ---
// Variables & Mixins
// ---

// colors
$main: #2d83a7;
$main-dark: darken($main, 10%);
$Auxiliarya: #1F1F1F;
$Auxiliaryb: #E42626;
$Secondarya: #1F1F1F;
$Secondaryb: #787878;
$Secondaryc: #556585;
$Secondaryd: #8D8D8D;
$Secondarye: #B4B4B4;
$Secondaryf: #ffffff;



$second: #28a7e1;
$light: #f1f1f1;
$black: #2c2c2c;
$white: #fff;
$grey: #777676;
$red: #dd0808;
$none: transparent;

/* brand */
$brand-line: #4ecd00;
$brand-facebook: #4267b2;
$brand-google: #ea4335;

/* opacity & gradient */
$black-op: rgba(0, 0, 0, 0.69);
$black-gradient: linear-gradient(to left, $none, rgba(0, 0, 0, 0.68), $none);

// fonts
$font-default: "Arial",
"Noto Sans TC",
sans-serif;
$font-en: "Oswald",
"Noto Sans TC",
sans-serif;

// shadows
$shadow-button: 0 2px 4px 0 rgba(0, 0, 0, 0.19);
$shadow-text: 0 2px 8px rgba(0, 0, 0, 0.7);
$shadow-box: 0 0 20px 3px rgba(0, 0, 0, 0.05);
$shadow-card: 0 2px 5px 0 rgba(0, 0, 0, 0.1);

$hover-shadow-card: 0px 0.2rem 1rem 1px rgba(0, 15, 94, 0.16);
// borders
$border: solid 1px #c5c5c5;

// transition
$transition: all 0.5s ease;

@function pow($base, $exponents) {
  $raised: 1;

  @if $exponents>0 {
    @for $i from 1 through $exponents {
      $raised: $raised * $base;
    }
  }

  @return $raised;
}

// 無條件捨去到小數點第 $n 位
@function floorD($number, $n: 0) {
  $p: pow(10, $n);
  @return floor($number * $p) / $p;
}

@function px2rem($px) {
  @return floorD($px/16px, 2) * 1rem;
}

// 製作 margin & padding
@mixin m($direction, $size) {
  margin-#{$direction}: $size !important;
}

@mixin p($direction, $size) {
  padding-#{$direction}: $size !important;
}

// 自訂 Breakpoint
// Bootstrap 原生斷點：576, 768, 992, 1200
// 擴充：1400, 1600

$device: (xlpc: 1600px,
  pc: 1400px,
  nb: 1200px,
  xlpad: 992px,
  pad: 768px,
  phone: 576px,
);

// 取得自訂斷點
/* 例如:
  @include device(pc);
  得到 1400px
*/
@function device($name) {
  @return map-get($device, $name);
}

// Responsive Media Query
// (to-pc 為 指定斷點以上的螢幕, to-mb 為指定斷點以下得螢幕)
/*
例如：
  @include res(pad, to-pc) {...}
  等同於
  @media all and (min-width: 768px) {...}

  @include res(pad, to-mb) {...}
  等同於
  @media all and (max-width: 767px) {...}
*/
@mixin res($selected, $mode: to-pc) {
  @if $mode==to-pc {
    @media all and (min-width: device($selected)) {
      @content;
    }
  }

  @if $mode==to-mb {
    $size: device($selected) - 1px;

    @media all and (max-width: $size) {
      @content;
    }
  }
}

// utilities

// icon - FontAwesome: https://fontawesome.com/icons?d=gallery&m=free
@mixin fa {
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
}

// 寬高比 1:1
@mixin square($size) {
  width: $size;
  height: $size;
}

// create customized grids container
/*
  for example:

  .grids-3{
    @include setgrids(3,12px);
  }

  在.grids-3底下的children會以3個一列，彼此間距為12px

  .grids-4{
    @include setgrids(2,12px,[[pad,3,16px],[pc,4,20px]]);
  }

  在.grids-4底下的children在pc以上的裝置會以4個一列，彼此間距為20px
                         在pad-pc的裝置會以3個一列，彼此間距為16px
                         在pad以下的裝置會以2個一列，彼此間距為12px
  
*/
@mixin setgrids($number,
  $gap,
  $res: ((device: "xlpc"), (res-number: "2"), (res-gap: $gap))) {
  $grid-width: 100%;
  $calcgap: false;

  @if $number>1 {
    @if $gap>0px {
      $calcperc: floorD(100 / $number, 2) * 1%;
      $calcgap: $gap * ($number - 1) / $number;
      $grid-width: calc(#{$calcperc} - #{$calcgap});
    }

    @else {
      $grid-width: 100% / $number;
    }
  }

  display: flex;
  flex-wrap: wrap;

  >* {
    flex-basis: $grid-width;
    max-width: $grid-width;

    @if ($gap !=0px) {
      margin-bottom: $gap;
    }

    @if ($calcgap) {
      &:not(:nth-child(#{$number}n + #{$number})) {
        margin-right: $gap;
      }

      &:nth-child(#{$number}n + #{$number}) {
        margin-right: 0;
      }
    }

    @if ($res) {
      @each $i in $res {
        $r-dev: nth($i, 1);
        $r-num: nth($i, 2);
        $r-gap: if(length($i) >2, nth($i, 3), $gap);

        @include res($r-dev) {
          $r-calcperc: floorD(100 / $r-num, 2) * 1%;
          $r-calcgap: $r-gap * ($r-num - 1) / $r-num;
          margin-bottom: $r-gap;

          &:not(:nth-child(#{$r-num}n + #{$r-num})) {
            margin-right: $r-gap;
          }

          &:nth-child(#{$r-num}n + #{$r-num}) {
            margin-right: 0;
          }

          $r-grid-width: calc(#{$r-calcperc} - #{$r-calcgap});

          @if $r-gap==0px {
            $r-grid-width: $r-calcperc;
          }

          flex-basis: $r-grid-width;
          max-width: $r-grid-width;
        }
      }
    }
  }
}

// 寬高比固定, 且背景設定置中
@mixin imgbox($ratio, $minheight: null) {
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  position: relative;

  &:before {
    content: "";
    display: block;

    @if ($minheight) {
      min-height: $minheight;
    }

    width: 100%;
    padding-bottom: $ratio;
  }
}

// for example：
// $line = 2, $lineheight: 1.5em
// 代表文字最多呈現兩行，超過兩行則隱藏 (行高設定為 1.5em )
@mixin textbox($line, $lineheight: 1.5em) {
  display: block;
  display: -webkit-box;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
  line-height: $lineheight;
  -webkit-line-clamp: $line;
  height: ($lineheight * $line);
}

// 設定 flexbox
// 若 $align = center，則水平、垂直皆置中
// 若 $align = x，則水平置中
@mixin flexbox($align) {
  display: flex;

  @if ($align==center) {
    align-items: center;
    justify-content: center;
  }

  @else if($align==x) {
    justify-content: center;
  }

  @else if($align==y) {
    align-items: center;
  }
}

// 正圓形且帶有背景的容器
// 內容預設水平、垂直置中
@mixin oval($size, $bg) {
  width: $size;
  height: $size;
  border-radius: 50%;
  background: $bg;
  @include flexbox(center);
}

// 滿版背景（絕對位置）
@mixin overlay($bg) {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: $bg;
}

@mixin absolute($top, $right, $bottom, $left) {
  top: $top;
  left: $left;
  bottom: $bottom;
  right: $right;
}

// 設定 瀏覽器捲軸 的樣式
@mixin scrollbar($width, $bg, $color, $hover) {
  $scrollbar: -webkit-scrollbar;

  ::#{$scrollbar} {
    width: $wid;
    height: $width;
  }

  ::#{$scrollbar}-track {
    background: $bg;
  }

  ::#{$scrollbar}-thumb {
    background: $color;
  }

  ::#{$scrollbar}-thumb:hover {
    background: $hover;
  }
}

// 淡入

@keyframes cp-fadeInDown {
  from {
    opacity: 0;
    transform: translate3d(0, -10px, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

// d-flex
@mixin d-flex {
  display: flex;
  flex-wrap: wrap;
}

@mixin rotate($deg) {
  -webkit-transform: rotate($deg);
  -moz-transform: rotate($deg);
  -o-transform: rotate($deg);
  transform: rotate($deg);
}

@mixin scaleX($num) {
  -moz-transform: scaleX($num);
  -webkit-transform: scaleX($num);
  -o-transform: scaleX($num);
  -ms-transform: scaleX($num);
  transform: scaleX($num);
}

@mixin scale($num) {
  -moz-transform: scale($num);
  -webkit-transform: scale($num);
  -o-transform: scale($num);
  -ms-transform: scale($num);
  transform: scale($num);
}

@mixin origin($x, $y) {
  -moz-transform-origin: $x $y;
  -webkit-transform-origin: $x $y;
  -o-transform-origin: $x $y;
  -ms-transform-origin: $x $y;
  transform-origin: $x $y;
}

@mixin animate($type, $sec) {
  -webkit-transition: $type $sec ease-in-out;
  -moz-transition: $type $sec ease-in-out;
  -ms-transition: $type $sec ease-in-out;
  -o-transition: $type $sec ease-in-out;
  transition: $type $sec ease-in-out;
}

@mixin pseudo($zindex, $top, $right, $bottom, $left) {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: $zindex;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin bgsize($y, $x) {
  -webkit-background-size: $y, $x;
  -o-background-size: $y, $x;
  background-size: $y, $x;
}

@mixin triangle($w-top, $w-right, $w-bottom, $w-left, $c-top, $c-right, $c-bottom, $c-left) {
  width: 0;
  height: 0;
  border-style: solid;
  border-width: $w-top $w-right $w-bottom $w-left;
  border-color: $c-top $c-right $c-bottom $c-left;
}

@mixin translate($x, $y) {
  -moz-transform: translate($x, $y);
  -ms-transform: translate($x, $y);
  -webkit-transform: translate($x, $y);
  transform: translate($x, $y);
}